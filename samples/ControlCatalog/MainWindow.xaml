<Window xmlns="https://github.com/avaloniaui" MinWidth="500" MinHeight="300"
		Width="800" Height="600"
		xmlns:pages="clr-namespace:ControlCatalog.Pages"
		xmlns:local="clr-namespace:ControlCatalog"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:vm="clr-namespace:ControlCatalog.ViewModels"
		xmlns:v="clr-namespace:ControlCatalog.Views"
		xmlns:plex="splitwirez://AvaloniaPlexTheme"
		Icon="/Assets/test_icon.ico"
		ExtendClientAreaToDecorationsHint="{Binding ExtendClientAreaEnabled}"
		ExtendClientAreaChromeHints="{Binding ChromeHints}"
		ExtendClientAreaTitleBarHeightHint="{Binding TitleBarHeight}"
		TransparencyLevelHint="{Binding TransparencyLevel}"        
		x:Name="MainWindow"
		x:Class="ControlCatalog.MainWindow"
		WindowState="{Binding WindowState, Mode=TwoWay}"
		plex:WindowTitleBar.Title="Avalonia [b]Plex Theme[/b] Control Gallery">
	<Window.Styles>
		<Style Selector="Window[ExtendClientAreaToDecorationsHint=True]:not(Window[ExtendClientAreaTitleBarHeightHint=-1]) ContentControl#MenuArea">
			<Setter Property="MinHeight" Value="{Binding $parent[Window].ExtendClientAreaTitleBarHeightHint}"/>
		</Style>
		<!--Style Selector="Window[ExtendClientAreaToDecorationsHint=True][ExtendClientAreaTitleBarHeightHint=-1] ContentControl#MenuArea">
			<Setter Property="Height" Value="32"/>
		</Style-->
		<Style Selector="Window[ExtendClientAreaToDecorationsHint=True] ContentControl#MenuArea /template/ TemplatedControl.menuBackground">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
		<Style Selector="Border.titleBarContent">
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="Red"/>
			<Setter Property="Height" Value="22"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="Background" Value="#B2FFFFFF"/>
			<Setter Property="Margin" Value="1"/>
		</Style>
		<Style Selector="Window[ClipToBounds=True] Border.titleBarContent,
						Window[ExtendClientAreaToDecorationsHint=True] Border.titleBarContent">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
		<Style Selector="Window[ClipToBounds=False][ExtendClientAreaToDecorationsHint=False] Border.titleBarContent">
		<!--[ExtendClientAreaToDecorationsHint=False]-->
		<!--[SystemDecorations=None]-->
		<!--[ClipToBounds=False]-->
			<Setter Property="Margin" Value="1,-31,1,1"/>
		</Style>
	</Window.Styles>
	<NativeMenu.Menu>
		<NativeMenu>
			<NativeMenuItem Header="File">
				<NativeMenu>
					<NativeMenuItem Icon="/Assets/test_icon.ico" Header="Open" Clicked="OnOpenClicked" Gesture="Ctrl+O"/>
					<NativeMenuItemSeperator/><!-- Uses incorrect spelling for now -->
					<NativeMenuItem Icon="/Assets/github_icon.png" Header="Recent">
						<NativeMenu/>
					</NativeMenuItem>
					<NativeMenuItemSeperator/><!-- Uses incorrect spelling for now -->
					<NativeMenuItem Header="{x:Static local:MainWindow.MenuQuitHeader}"
									Gesture="{x:Static local:MainWindow.MenuQuitGesture}"
									Clicked="OnCloseClicked" />
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="Edit">
				<NativeMenu>
					<NativeMenuItem Header="Copy"/>
					<NativeMenuItem Header="Paste"/>
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="Options">
				<NativeMenu>
					<NativeMenuItem Header="Check Me (None)" 
									Command="{Binding ToggleMenuItemCheckedCommand}"
									ToggleType="None"
									IsChecked="{Binding IsMenuItemChecked}"  />
					<NativeMenuItem Header="Check Me (CheckBox)" 
									Command="{Binding ToggleMenuItemCheckedCommand}"
									ToggleType="CheckBox"
									IsChecked="{Binding IsMenuItemChecked}"  />
					<NativeMenuItem Header="Check Me (Radio)" 
									Command="{Binding ToggleMenuItemCheckedCommand}"
									ToggleType="Radio"
									IsChecked="{Binding IsMenuItemChecked}"  />
				</NativeMenu>
			</NativeMenuItem>
		</NativeMenu>
	</NativeMenu.Menu>

	<Window.DataTemplates>
		<DataTemplate DataType="vm:NotificationViewModel">
			<v:CustomNotificationView />
		</DataTemplate>
	</Window.DataTemplates>
	<Panel>
		<Panel Margin="{Binding #MainWindow.OffScreenMargin}">
			<DockPanel LastChildFill="True" Margin="{Binding #MainWindow.WindowDecorationMargin}">
				<ContentControl x:Name="MenuArea" Classes="toolsMenuArea" DockPanel.Dock="Top">
					<DockPanel>
						<Control DockPanel.Dock="Left"
							Width="{Binding $parent[Window].(plex:WindowTitleBar.LeftCaptionButtonsWidth)}"/>
						<Control DockPanel.Dock="Right"
							Width="{Binding $parent[Window].(plex:WindowTitleBar.RightCaptionButtonsWidth)}"/>
						<Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
							<Menu Name="MainMenu"
							Grid.Column="0"
							Grid.Row="0">
								<MenuItem Header="File">
									<MenuItem Header="Exit" Command="{Binding ExitCommand}" />
								</MenuItem>
								<MenuItem Header="Edit">
									<MenuItem Header="lol...there's nothing here to edit" IsEnabled="False" />
								</MenuItem>
								<MenuItem Header="View">
									<MenuItem Header="You're already viewing stuff." IsEnabled="False" />
								</MenuItem>
								<MenuItem Header="Help">
									<MenuItem Header="About" Command="{Binding AboutCommand}" />
								</MenuItem>
							</Menu>
							<ToggleButton x:Name="ShowControlsList"
							Width="180"
							Grid.Column="0"
							Grid.Row="1"
							Background="Transparent"
							Padding="0,5,8,6"
							Margin="0,0,5,0">
								<DockPanel>
									<Border Width="13"
											Height="13"
											CornerRadius="8"
											Margin="10,0"
											DockPanel.Dock="Left"
											BoxShadow="0 2 4 1 #40000000">
										<Border.Background>
											<LinearGradientBrush StartPoint="90%,10%"
																EndPoint="10%,90%">
												<GradientStop Offset="0" Color="#FFF1F2F4"/>
												<GradientStop Offset="1" Color="#FF9DAFD7"/>
											</LinearGradientBrush>
										</Border.Background>
										<Path HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Data="M 0 3.5 L 3.5 0 L 7 3.5 L 4.5 3.5 L 3.5 2.5 L 2.5 3.5 Z">
											<Path.Fill>
												<LinearGradientBrush StartPoint="0%,0%"
																	EndPoint="100%,0%">
													<GradientStop Offset="0" Color="#FF455D99"/>
													<GradientStop Offset="1" Color="#FF4F71B8"/>
												</LinearGradientBrush>
											</Path.Fill>
										</Path>
									</Border>
									<TextBlock Text="show\hide controls"/>
								</DockPanel>
							</ToggleButton>
							<Border Height="19"
									Grid.Column="1"
									Grid.Row="0"
									Margin="0,0,11,0"
									Background="LightGray">
								<TextBlock Text="Nothing here...yet?"/>
							</Border>
							<StackPanel Grid.Column="1"
								Grid.Row="1"
								Orientation="Horizontal">
								<ToggleButton x:Name="WindowOptions"
											Background="Transparent"
											Padding="0,5,8,6">
									<DockPanel>
										<Rectangle Width="16" Height="16" Fill="Red" Margin="10,0" DockPanel.Dock="Left"/>
										<TextBlock Text="Window options"/>
									</DockPanel>
								</ToggleButton>
								<Popup PlacementTarget="{Binding #WindowOptions}" IsOpen="{Binding #WindowOptions.IsChecked, Mode=TwoWay}" StaysOpen="False">
									<Border Background="Gray" BorderBrush="#FFFF00FF" BorderThickness="5">
										<StackPanel>
											<TextBlock Text="TODO: Make this not look horrible"/>
											<pages:WindowCustomizationsPage/>
										</StackPanel>
									</Border>
								</Popup>
								<!--ToggleButton x:Name="Colors"
											Background="Transparent"
											Padding="0,5,8,6">
									<DockPanel>
										<Rectangle Width="16" Height="16" Fill="Red" Margin="10,0" DockPanel.Dock="Left"/>
										<TextBlock Text="Colors"/>
									</DockPanel>
								</ToggleButton>
								<Popup PlacementTarget="{Binding #Colors}" IsOpen="{Binding #Colors.IsChecked, Mode=TwoWay}" StaysOpen="False">
									<Border Background="Gray" BorderBrush="#FFFF00FF" BorderThickness="5">
										<StackPanel>
											<TextBlock Text="TODO: Make this not look horrible"/>
											<pages:PlexColorsPage/>
										</StackPanel>
									</Border>
								</Popup-->
							</StackPanel>
						</Grid>
					</DockPanel>
				</ContentControl>
				<local:MainView Tag="{Binding !#ShowControlsList.IsChecked}" />
			</DockPanel>
		</Panel>
		<Border Classes="titleBarContent">
			<TextBlock Margin="5 5 5 0" Text="Content In Title Bar" />
		</Border>
		<!--IsVisible="{Binding ExtendClientAreaEnabled}"-->
		<!--ContentPresenter Content="{Binding $parent[Window].(plex:WindowTitleBar.Title)}"/-->
	</Panel>
</Window>