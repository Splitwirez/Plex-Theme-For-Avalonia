<Styles xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:plex="splitwirez://AvaloniaPlexTheme">
	<Styles.Resources>
		<plex:RectAndCornerRadiusToRoundedRectConverter x:Key="RectAndCornerRadiusToRoundedRectConverter"/>
	</Styles.Resources>
	<Style Selector="Window">
		<Setter Property="Background" Value="{DynamicResource Window-Background}"/>
		<Setter Property="TransparencyBackgroundFallback" Value="{DynamicResource Window-Background}" />
		<Setter Property="Foreground" Value="{DynamicResource Window-Foreground}"/>
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}"/>
		<Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
		<Setter Property="SystemDecorations" Value="None"/>
		<Setter Property="TransparencyLevelHint" Value="Transparent"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<Border x:Name="WindowShadowBorder">
						<Panel>
							<Panel Margin="0,1,0,0" IsVisible="False">
								<Border Name="PART_TransparencyFallback" IsHitTestVisible="False"/>
							</Panel>
							<Panel x:Name="TitleBarContainer"
								VerticalAlignment="Top">
								<plex:WindowTitleBar x:Name="TitleBar"
													WindowCaptionButtons="{Binding #CaptionButtons}"
													Margin="0,0,0,-8"
													Padding="0,0,0,8"
													VerticalAlignment="Stretch"/>
							</Panel>
							<DockPanel>
								<Control x:Name="ContentSpacer"
										Height="{Binding #TitleBarContainer.Bounds.Height}"
										IsHitTestVisible="False"
										DockPanel.Dock="Top"/>
								<VisualLayerManager>
									<ContentPresenter x:Name="PART_ContentPresenter"
														Background="{TemplateBinding Background}"
														BorderBrush="Transparent"
														BorderThickness="0"

														ContentTemplate="{TemplateBinding ContentTemplate}"
														Content="{TemplateBinding Content}"
														Margin="{TemplateBinding Padding}"
														HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
														VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
								</VisualLayerManager>
							</DockPanel>
							<CaptionButtons x:Name="CaptionButtons"
											VerticalAlignment="Top"
											Height="{Binding #TitleBarContainer.Bounds.Height}"
											HorizontalAlignment="{Binding #TitleBar.DesiredCaptionButtonsAlignment}"/>
							<!--Border IsHitTestVisible="False"
									Background="Transparent"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"/-->
						</Panel>
					</Border>
					<plex:WindowResizeEdge/>
					<!-- Margin="-8,0,-8,-12"-->
				</Panel>
			</ControlTemplate>
			<!--ControlTemplate>
				<Panel>
					<Border x:Name="WindowShadowBorder">
						<Panel>
							<Panel Margin="0,1,0,0">
								<Border Name="PART_TransparencyFallback" IsHitTestVisible="False" CornerRadius="{Binding #BackgroundBorder.CornerRadius}"/>
								<!-Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" IsHitTestVisible="False"/>
								<Border BorderBrush="{DynamicResource Window-BorderBrush}" BorderThickness="1" CornerRadius="{Binding #BackgroundBorder.CornerRadius}"/->
							</Panel>
							<DockPanel>
								<Panel x:Name="TitleBarContainer" DockPanel.Dock="Top">
									<plex:WindowTitleBar x:Name="TitleBar" Margin="0,0,0,-8" VerticalAlignment="Stretch"/>
								</Panel>
								<Border Background="{TemplateBinding Background}"
										CornerRadius="{Binding #PART_TransparencyFallback.CornerRadius}"
										BorderBrush="Transparent"
										IsHitTestVisible="False"/>
							</DockPanel>
							<DockPanel>
								<Control x:Name="ContentSpacer" IsHitTestVisible="False" DockPanel.Dock="Top"/>
								<!-Margin="0,0,0,-5" ->
								<!-Height="{Binding #TitleBar.Bounds.Height}" Margin="{Binding #TitleBar.Margin}"->
								<!-Panel->
									<VisualLayerManager>
										<!-VisualLayerManager.ChromeOverlayLayer>
											<TitleBar />
										</VisualLayerManager.ChromeOverlayLayer->
										<ContentPresenter x:Name="PART_ContentPresenter"
															Background="Transparent"
															BorderBrush="Transparent"
															BorderThickness="0"
															CornerRadius="{Binding #PART_TransparencyFallback.CornerRadius}"

															ContentTemplate="{TemplateBinding ContentTemplate}"
															Content="{TemplateBinding Content}"
															Margin="{TemplateBinding Padding}"
															HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
															VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</VisualLayerManager>
									<!-Panel Classes="titleBarBottomCorners" VerticalAlignment="Top">
										<Border>
											<Border/>
										</Border>
									</Panel->
								<!-/Panel->
							</DockPanel>
						</Panel>
					</Border>
					<plex:WindowResizeEdge/>
				</Panel>
			</ControlTemplate-->
			<!--ControlTemplate>
				<Panel>
					<Border x:Name="WindowShadowBorder">
						<Panel>
							<Panel Margin="0,1,0,0">
								<Border Name="PART_TransparencyFallback" IsHitTestVisible="False" CornerRadius="{Binding #BackgroundBorder.CornerRadius}"/>
								<!-Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" IsHitTestVisible="False"/>
								<Border BorderBrush="{DynamicResource Window-BorderBrush}" BorderThickness="1" CornerRadius="{Binding #BackgroundBorder.CornerRadius}"/->
							</Panel>
							<DockPanel>
								<Panel x:Name="TitleBarContainer" DockPanel.Dock="Top">
									<!-plex:WindowTitleBar x:Name="TitleBar" Margin="0,0,0,-8" VerticalAlignment="Stretch"/->
								</Panel>
								<Border Background="{TemplateBinding Background}"
										CornerRadius="{Binding #PART_TransparencyFallback.CornerRadius}"
										BorderBrush="Transparent"
										IsHitTestVisible="False"/>
							</DockPanel>
							<DockPanel>
								<Control x:Name="ContentSpacer" IsHitTestVisible="False" DockPanel.Dock="Top"/>
								<TitleBar DockPanel.Dock="Top" Height="30" IsVisible="True" plex:ChromeHelper.ForceVisible="True"/>
								<!-CaptionButtons DockPanel.Dock="Top" Height="30"/->
								<!-Margin="0,0,0,-5" ->
								<!-Height="{Binding #TitleBar.Bounds.Height}" Margin="{Binding #TitleBar.Margin}"->
								<!-Panel->
									<VisualLayerManager>
										<!-VisualLayerManager.ChromeOverlayLayer>
											<TitleBar />
										</VisualLayerManager.ChromeOverlayLayer->
										<ContentPresenter x:Name="PART_ContentPresenter"
															Background="Transparent"
															BorderBrush="Transparent"
															BorderThickness="0"
															CornerRadius="{Binding #PART_TransparencyFallback.CornerRadius}"

															ContentTemplate="{TemplateBinding ContentTemplate}"
															Content="{TemplateBinding Content}"
															Margin="{TemplateBinding Padding}"
															HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
															VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</VisualLayerManager>
									<!-Panel Classes="titleBarBottomCorners" VerticalAlignment="Top">
										<Border>
											<Border/>
										</Border>
									</Panel->
								<!-/Panel->
							</DockPanel>
						</Panel>
					</Border>
					<plex:WindowResizeEdge/>
				</Panel>
			</ControlTemplate-->
		</Setter>
	</Style>

	<!--Style Selector="Window /template/ CaptionButtons#CaptionButtons[HorizontalAlignment=Left]">
		<Setter Property="" Value="{Binding }"/>
	</Style-->



	<!--Style Selector="Window[SystemDecorations=None] /template/ TitleBar">
		<Setter Property="plex:ChromeHelper.OverrideIsVisible" Value="True"/>
		<!-Setter Property="plex:ChromeHelper.ForcedIsVisible" Value="True"/->
		<!-{Binding ExtendClientAreaToDecorationsHint, RelativeSource={RelativeSource Mode=TemplatedParent}}->
	</Style-->

	<Style Selector="Window[ExtendClientAreaToDecorationsHint=True][ExtendClientAreaTitleBarHeightHint=-1] /template/ Panel#TitleBarContainer,
					Window[ExtendClientAreaToDecorationsHint=False] /template/ Panel#TitleBarContainer">
		<Setter Property="Height" Value="32"/>
	</Style>
	<Style Selector="Window[ExtendClientAreaToDecorationsHint=True]:not(Window[ExtendClientAreaTitleBarHeightHint=-1]) /template/ Panel#TitleBarContainer">
		<Setter Property="Height" Value="{Binding $parent[Window].ExtendClientAreaTitleBarHeightHint}"/>
	</Style>
	
	<Style Selector="Window:not(Window[WindowState=Maximized], Window[WindowState=FullScreen]) /template/ Border#WindowShadowBorder,
					Window:not(Window[WindowState=Maximized], Window[WindowState=FullScreen]) /template/ Border#PART_TransparencyFallback">
		<Setter Property="CornerRadius" Value="{DynamicResource Window-CornerRadius-All}"/>
	</Style>

	<Style Selector="Window:not(Window[WindowState=Maximized], Window[WindowState=FullScreen]) /template/ Border#WindowShadowBorder">
		<Setter Property="Margin" Value="8,0,8,12"/>
	</Style>
	<Style Selector="Window[IsActive=True]:not(Window[WindowState=Maximized], Window[WindowState=FullScreen]) /template/ Border#WindowShadowBorder">
		<Setter Property="BoxShadow" Value="0 6 8 0 #7F000000"/>
	</Style>
	<Style Selector="Window[IsActive=False]:not(Window[WindowState=Maximized], Window[WindowState=FullScreen]) /template/ Border#WindowShadowBorder">
		<Setter Property="BoxShadow" Value="0 6 8 0 #5F000000"/>
	</Style>

	<Style Selector="plex|WindowResizeEdge">
		<Setter Property="Template">
			<ControlTemplate>
				<Grid ColumnDefinitions="8,*,8" RowDefinitions="8,*,12">
					<Rectangle x:Name="PART_Left" Grid.Column="0" Grid.Row="1"/>
					<Rectangle x:Name="PART_TopLeft" Grid.Column="0" Grid.Row="0"/>
					<Rectangle x:Name="PART_Top" Grid.Column="1" Grid.Row="0"/>
					<Rectangle x:Name="PART_TopRight" Grid.Column="2" Grid.Row="0"/>
					<Rectangle x:Name="PART_Right" Grid.Column="2" Grid.Row="1"/>
					<Rectangle x:Name="PART_BottomRight" Grid.Column="2" Grid.Row="2"/>
					<Rectangle x:Name="PART_Bottom" Grid.Column="1" Grid.Row="2"/>
					<Rectangle x:Name="PART_BottomLeft" Grid.Column="0" Grid.Row="2"/>
				</Grid>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="plex|WindowResizeEdge /template/ Rectangle">
		<Setter Property="Fill" Value="#01000000"/>
	</Style>
	
	<Style Selector="Window[WindowState=Maximized] /template/ plex|WindowResizeEdge,
					Window[WindowState=FullScreen] /template/ plex|WindowResizeEdge
					Window[CanResize=False] /template/ plex|WindowResizeEdge">
		<Setter Property="IsVisible" Value="False"/>
	</Style>



	
	<Style Selector="Window[SystemDecorations=Full] /template/ Control#ContentSpacer,
					Window[ExtendClientAreaToDecorationsHint=true] /template/ Control#ContentSpacer">
		<Setter Property="IsVisible" Value="False"/>
	</Style>

	<Style Selector="Window /template/ ContentPresenter#PART_ContentPresenter">
					<!--Window[WindowState=Maximized] /template/ ContentPresenter#PART_ContentPresenter,
					Window[WindowState=FullScreen] /template/ ContentPresenter#PART_ContentPresenter-->
		<Setter Property="CornerRadius" Value="{DynamicResource Window-CornerRadius-Top}"/>
	</Style>
	<Style Selector="Window:not(Window[ExtendClientAreaToDecorationsHint=true][ExtendClientAreaTitleBarHeightHint=-1]):not(Window[WindowState=Maximized], Window[WindowState=FullScreen]) /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="CornerRadius" Value="{DynamicResource Window-CornerRadius-All}"/>
	</Style>


	<Style Selector="Window[ClipToBounds=True] /template/ ContentPresenter#PART_ContentPresenter">
		<!--[ExtendClientAreaToDecorationsHint=False]:not(Window[WindowState=Maximized], Window[WindowState=FullScreen])-->
		
		<!--Setter Property="ClipToBounds" Value="True"/-->
		<Setter Property="Clip">
			<MultiBinding Converter="{StaticResource RectAndCornerRadiusToRoundedRectConverter}">
				<Binding Path="Bounds" RelativeSource="{RelativeSource Mode=Self}"/>
				<Binding Path="CornerRadius" RelativeSource="{RelativeSource Mode=Self}"/>
			</MultiBinding>
		</Setter>
		<!--Setter Property="Clip">
			<RoundedRect>
				<RoundedRect.Rect>
					<Rect Width="{Binding Bounds.Width, RelativeSource={RelativeSource Mode=Self}}"
						  Height="{Binding Bounds.Height, RelativeSource={RelativeSource Mode=Self}}"/>
				</RoundedRect.Rect>
				<RoundedRect.RadiiTopLeft>
					<Vector X="{DynamicResource Window-CornerRadius}"
							Y="{DynamicResource Window-CornerRadius}"/>
				</RoundedRect.RadiiTopLeft>
				<RoundedRect.RadiiTopRight>
					<Vector X="{DynamicResource Window-CornerRadius}"
							Y="{DynamicResource Window-CornerRadius}"/>
				</RoundedRect.RadiiTopRight>
				<RoundedRect.RadiiBottomRight>
					<Vector X="{DynamicResource Window-CornerRadius}"
							Y="{DynamicResource Window-CornerRadius}"/>
				</RoundedRect.RadiiBottomRight>
				<RoundedRect.RadiiBottomLeft>
					<Vector X="{DynamicResource Window-CornerRadius}"
							Y="{DynamicResource Window-CornerRadius}"/>
				</RoundedRect.RadiiBottomLeft>
			</RoundedRect>
		</Setter-->
	</Style>


	<Style Selector="Panel.titleBarBottomCorners">
		<Setter Property="Height" Value="5"/>
		<Setter Property="ClipToBounds" Value="True"/>
    </Style>


	<Style Selector="Panel.titleBarBottomCorners > Border">
		<Setter Property="BorderThickness" Value="5,5,5,0"/>
		<Setter Property="CornerRadius" Value="{DynamicResource Window-CornerRadius-Top}"/>
		<Setter Property="Margin" Value="-5"/>
    </Style>
	
	<Style Selector="Panel.titleBarBottomCorners > Border > Border">
		<Setter Property="BorderThickness" Value="0,1,0,0"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Window-TitleBar-BottomBorderBrush}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource Window-CornerRadius-Top}"/>
		<Setter Property="Margin" Value="-1,0"/>
    </Style>

	<Style Selector="Window[IsActive=True] /template/ Panel.titleBarBottomCorners > Border">
		<Setter Property="BorderBrush" Value="{DynamicResource Window-ActiveTitleBar-Background}"/>
	</Style>
	<Style Selector="Window[IsActive=False] /template/ Panel.titleBarBottomCorners > Border">
		<Setter Property="BorderBrush" Value="{DynamicResource Window-InactiveTitleBar-Background}"/>
	</Style>

	<Style Selector="Button.captionButton">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource Window-CaptionButton-ActiveIdle}"/>
		<Setter Property="Padding" Value="6,0"/>
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter x:Name="PART_ContentPresenter"
								Background="Transparent"
								BorderBrush="Transparent"
								BorderThickness="0"
								CornerRadius="0"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="Stretch"
								VerticalAlignment="Stretch"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								TextBlock.Foreground="{TemplateBinding Foreground}"/>
            </ControlTemplate>
        </Setter>
    </Style>
	<Style Selector="Button.captionButton#PART_CloseButton">
		<Setter Property="Padding" Value="6,0,14,0"/>
    </Style>

	<Style Selector="Window[IsActive=False] Button.captionButton">
        <Setter Property="Foreground" Value="{DynamicResource Window-CaptionButton-InactiveIdle}"/>
    </Style>
	<Style Selector="Button.captionButton:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource Window-CaptionButton-Hover}"/>
    </Style>
	<Style Selector="Button.captionButton:pressed">
        <Setter Property="Foreground" Value="{DynamicResource Window-CaptionButton-Pressed}"/>
    </Style>
	<Style Selector="Button.captionButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Opacity" Value="0.25"/>
    </Style>

	<Style Selector="Button.captionButton > Panel > Path,
					Button.captionButton#PART_MaximizeButton TemplatedControl /template/ Path.glyph">
        <Setter Property="Fill" Value="{Binding $parent[Button].Foreground}"/>
        <Setter Property="Stroke" Value="{DynamicResource Window-CaptionButton-Stroke}"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>
	<Style Selector="Button.captionButton#PART_CloseButton > Panel > Path">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
	<Style Selector="Button.captionButton > Panel > Border">
		<Setter Property="BorderBrush" Value="{DynamicResource Window-CaptionButton-Stroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
    </Style>
	<Style Selector="Button.captionButton > Panel > Border > Rectangle">
		<Setter Property="Fill" Value="{Binding $parent[Button].Foreground}"/>
    </Style>

	<Style Selector="Button.captionButton#PART_MaximizeButton > TemplatedControl">
		<Setter Property="Template">
			<ControlTemplate>
				<Border Classes="glyphOuter" Width="11" Height="11">
					<Border BorderThickness="1,3,1,1" BorderBrush="{Binding $parent[Button].Foreground}">
						<Border/>
					</Border>
				</Border>
			</ControlTemplate>
		</Setter>
    </Style>
	<Style Selector="Window[WindowState=Maximized] Button.captionButton#PART_MaximizeButton > TemplatedControl">
		<Setter Property="Template">
			<ControlTemplate>
				<Panel Width="11" Height="11">
					<Border Classes="glyphOuter" Width="9" Height="8" HorizontalAlignment="Right" VerticalAlignment="Top">
						<Border BorderThickness="1,3,1,1" BorderBrush="{Binding $parent[Button].Foreground}">
							<Border/>
						</Border>
					</Border>
					<Border Classes="glyphOuter" Width="9" Height="8" HorizontalAlignment="Left" VerticalAlignment="Bottom">
						<Border BorderThickness="1,3,1,1" BorderBrush="{Binding $parent[Button].Foreground}">
							<Border/>
						</Border>
					</Border>
				</Panel>
			</ControlTemplate>
		</Setter>
    </Style>
	<Style Selector="Button.captionButton#PART_MaximizeButton > TemplatedControl /template/ Border.glyphOuter,
					Button.captionButton#PART_MaximizeButton > TemplatedControl /template/ Border.glyphOuter > Border > Border">
		<Setter Property="BorderBrush" Value="{DynamicResource Window-CaptionButton-Stroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
    </Style>
	<Style Selector="Button.captionButton#PART_MaximizeButton > TemplatedControl /template/ Border.glyphOuter > Border > Rectangle">
		<Setter Property="Stroke" Value="{DynamicResource Window-CaptionButton-Stroke}"/>
		<Setter Property="StrokeThickness" Value="1"/>
    </Style>
</Styles>